Index: src/Calculator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.event.ItemEvent;\r\nimport java.util.function.Consumer;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Calculator {\r\n\r\n    private static final int WINDOW_WIDTH = 410;\r\n    private static final int WINDOW_HEIGHT = 600;\r\n    private static final int BUTTON_WIDTH = 80;\r\n    private static final int BUTTON_HEIGHT = 70;\r\n    private static final int MARGIN_X = 20;\r\n    private static final int MARGIN_Y = 60;\r\n\r\n    private JFrame window; // Main window\r\n    private JComboBox<String> comboCalcType, comboTheme;\r\n    private JTextField inText; // Input\r\n    // TODO\r\n    private JButton btnC, btnBack, btnMod, btnDiv, btnMul, btnSub, btnAdd, btn0, btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btnPoint, btnEqual, btnRoot, btnPower, btnLog;\r\n\r\n    private char opt = ' '; // Save the operator\r\n    private boolean go = true; // For calculate with Opt != (=)\r\n    private boolean addWrite = true; // Connect numbers in display\r\n    private double val = 0; // Save the value typed for calculation\r\n\r\n    /*\r\n        Mx Calculator:\r\n        X = Row\r\n        Y = Column\r\n\r\n        +-------------------+\r\n        |   +-----------+   |   y[0]\r\n        |   |           |   |\r\n        |   +-----------+   |\r\n        |                   |\r\n        |   C  <-   %   /   |   y[1]\r\n        |   7   8   9   *   |   y[2]\r\n        |   4   5   6   -   |   y[3]\r\n        |   1   2   3   +   |   y[4]\r\n        |   .   0     =     |   y[5]\r\n        +-------------------+\r\n         x[0] x[1] x[2] x[3]\r\n\r\n    */\r\n\r\n    /*\r\n        +-------------------+\r\n        |   +-----------+   |   y[0]\r\n        |   |           |   |\r\n        |   +-----------+   |\r\n        |                   |\r\n        |   0   1   1   3   |   y[1]\r\n        |   4   5   6   7   |   y[2]\r\n        |   8   9   10  11  |   y[3]\r\n        |   12  13  14  15  |   y[4]\r\n        |   16  17    18    |   y[5]\r\n        +-------------------+\r\n         x[0] x[1] x[2] x[3]\r\n\r\n    */\r\n\r\n    public Calculator() {\r\n        window = new JFrame(\"Calculator\");\r\n        window.setSize(WINDOW_WIDTH, WINDOW_HEIGHT);\r\n        window.setLocationRelativeTo(null); // Move window to center\r\n\r\n        comboCalcType = initCombo(new String[]{\"Standard\", \"Scientific\"}, 20, 30, \"Calculator type\", calcTypeSwitchEventConsumer);  // first incremental session\r\n        comboTheme = initCombo(new String[]{\"Simple\", \"Colored\", \"DarkTheme\"}, 230, 30, \"Theme\", themeSwitchEventConsumer); // second incremental session\r\n\r\n        int[] x = {MARGIN_X, MARGIN_X + 90, 200, 290, 380};\r\n        int[] y = {MARGIN_Y, MARGIN_Y + 100, MARGIN_Y + 180, MARGIN_Y + 260, MARGIN_Y + 340, MARGIN_Y + 420};\r\n\r\n        inText = new JTextField(\"0\");\r\n        inText.setBounds(x[0], y[0], 350, 70);\r\n        inText.setEditable(false);\r\n        inText.setBackground(Color.WHITE);\r\n        inText.setFont(new Font(\"Comic Sans MS\", Font.PLAIN, 33));\r\n        window.add(inText);\r\n\r\n        btnC = initBtn(\"C\", x[0], y[1], event -> {\r\n            repaintFont();\r\n            inText.setText(\"0\");\r\n            opt = ' ';\r\n            val = 0;\r\n        });\r\n\r\n        btnBack = initBtn(\"<-\", x[1], y[1], event -> {\r\n            repaintFont();\r\n            String str = inText.getText();\r\n            StringBuilder str2 = new StringBuilder();\r\n            for (int i = 0; i < (str.length() - 1); i++) {\r\n                str2.append(str.charAt(i));\r\n            }\r\n            if (str2.toString().equals(\"\")) {\r\n                inText.setText(\"0\");\r\n            } else {\r\n                inText.setText(str2.toString());\r\n            }\r\n        });\r\n\r\n        btnMod = initBtn(\"%\", x[2], y[1], event -> {\r\n            repaintFont();\r\n            if (Pattern.matches(\"([-]?\\\\d+[.]\\\\d*)|(\\\\d+)\", inText.getText())) if (go) {\r\n                val = calc(val, inText.getText(), opt);\r\n                if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(val))) {\r\n                    inText.setText(String.valueOf((int) val));\r\n                } else {\r\n                    inText.setText(String.valueOf(val));\r\n                }\r\n                opt = '%';\r\n                go = false;\r\n                addWrite = false;\r\n            }\r\n        });\r\n\r\n        btnDiv = initBtn(\"/\", x[3], y[1], event -> {\r\n            repaintFont();\r\n            if (Pattern.matches(\"([-]?\\\\d+[.]\\\\d*)|(\\\\d+)\", inText.getText())) if (go) {\r\n                val = calc(val, inText.getText(), opt);\r\n                if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(val))) {\r\n                    inText.setText(String.valueOf((int) val));\r\n                } else {\r\n                    inText.setText(String.valueOf(val));\r\n                }\r\n                opt = '/';\r\n                go = false;\r\n                addWrite = false;\r\n            } else {\r\n                opt = '/';\r\n            }\r\n        });\r\n\r\n        btn7 = initBtn(\"7\", x[0], y[2], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"7\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"7\");\r\n                }\r\n            } else {\r\n                inText.setText(\"7\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btn8 = initBtn(\"8\", x[1], y[2], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"8\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"8\");\r\n                }\r\n            } else {\r\n                inText.setText(\"8\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btn9 = initBtn(\"9\", x[2], y[2], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"9\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"9\");\r\n                }\r\n            } else {\r\n                inText.setText(\"9\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btnMul = initBtn(\"*\", x[3], y[2], event -> {\r\n            repaintFont();\r\n            if (Pattern.matches(\"([-]?\\\\d+[.]\\\\d*)|(\\\\d+)\", inText.getText())) if (go) {\r\n                val = calc(val, inText.getText(), opt);\r\n                if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(val))) {\r\n                    inText.setText(String.valueOf((int) val));\r\n                } else {\r\n                    inText.setText(String.valueOf(val));\r\n                }\r\n                opt = '*';\r\n                go = false;\r\n                addWrite = false;\r\n            } else {\r\n                opt = '*';\r\n            }\r\n        });\r\n\r\n        btn4 = initBtn(\"4\", x[0], y[3], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"4\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"4\");\r\n                }\r\n            } else {\r\n                inText.setText(\"4\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btn5 = initBtn(\"5\", x[1], y[3], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"5\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"5\");\r\n                }\r\n            } else {\r\n                inText.setText(\"5\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btn6 = initBtn(\"6\", x[2], y[3], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"6\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"6\");\r\n                }\r\n            } else {\r\n                inText.setText(\"6\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btnSub = initBtn(\"-\", x[3], y[3], event -> {\r\n            repaintFont();\r\n            if (Pattern.matches(\"([-]?\\\\d+[.]\\\\d*)|(\\\\d+)\", inText.getText())) if (go) {\r\n                val = calc(val, inText.getText(), opt);\r\n                if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(val))) {\r\n                    inText.setText(String.valueOf((int) val));\r\n                } else {\r\n                    inText.setText(String.valueOf(val));\r\n                }\r\n\r\n                opt = '-';\r\n                go = false;\r\n                addWrite = false;\r\n            } else {\r\n                opt = '-';\r\n            }\r\n        });\r\n\r\n        btn1 = initBtn(\"1\", x[0], y[4], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"1\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"1\");\r\n                }\r\n            } else {\r\n                inText.setText(\"1\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btn2 = initBtn(\"2\", x[1], y[4], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"2\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"2\");\r\n                }\r\n            } else {\r\n                inText.setText(\"2\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btn3 = initBtn(\"3\", x[2], y[4], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"3\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"3\");\r\n                }\r\n            } else {\r\n                inText.setText(\"3\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btnAdd = initBtn(\"+\", x[3], y[4], event -> {\r\n            repaintFont();\r\n            if (Pattern.matches(\"([-]?\\\\d+[.]\\\\d*)|(\\\\d+)\", inText.getText())) if (go) {\r\n                val = calc(val, inText.getText(), opt);\r\n                if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(val))) {\r\n                    inText.setText(String.valueOf((int) val));\r\n                } else {\r\n                    inText.setText(String.valueOf(val));\r\n                }\r\n                opt = '+';\r\n                go = false;\r\n                addWrite = false;\r\n            } else {\r\n                opt = '+';\r\n            }\r\n        });\r\n\r\n        btnPoint = initBtn(\".\", x[0], y[5], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (!inText.getText().contains(\".\")) {\r\n                    inText.setText(inText.getText() + \".\");\r\n                }\r\n            } else {\r\n                inText.setText(\"0.\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btn0 = initBtn(\"0\", x[1], y[5], event -> {\r\n            repaintFont();\r\n            if (addWrite) {\r\n                if (Pattern.matches(\"[0]*\", inText.getText())) {\r\n                    inText.setText(\"0\");\r\n                } else {\r\n                    inText.setText(inText.getText() + \"0\");\r\n                }\r\n            } else {\r\n                inText.setText(\"0\");\r\n                addWrite = true;\r\n            }\r\n            go = true;\r\n        });\r\n\r\n        btnEqual = initBtn(\"=\", x[2], y[5], event -> {\r\n            if (Pattern.matches(\"([-]?\\\\d+[.]\\\\d*)|(\\\\d+)\", inText.getText())) if (go) {\r\n                val = calc(val, inText.getText(), opt);\r\n                if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(val))) {\r\n                    inText.setText(String.valueOf((int) val));\r\n                } else {\r\n                    inText.setText(String.valueOf(val));\r\n                }\r\n                opt = '=';\r\n                addWrite = false;\r\n            }\r\n        });\r\n        btnEqual.setSize(2 * BUTTON_WIDTH + 10, BUTTON_HEIGHT);\r\n\r\n        // first incremental session: add sqrt\r\n        btnRoot = initBtn(\"√\", x[4], y[1], event -> {\r\n            if (Pattern.matches(\"([-]?\\\\d+[.]\\\\d*)|(\\\\d+)\", inText.getText())) if (go) {\r\n                val = Math.sqrt(Double.parseDouble(inText.getText()));\r\n                if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(val))) {\r\n                    inText.setText(String.valueOf((int) val));\r\n                } else {\r\n                    inText.setText(String.valueOf(val));\r\n                }\r\n                opt = '√';\r\n                addWrite = false;\r\n            }\r\n        });\r\n        btnRoot.setVisible(false);\r\n\r\n        // first incremental session: add pow\r\n        btnPower = initBtn(\"pow\", x[4], y[2], event -> {\r\n            repaintFont();\r\n            if (Pattern.matches(\"([-]?\\\\d+[.]\\\\d*)|(\\\\d+)\", inText.getText())) if (go) {\r\n                val = calc(val, inText.getText(), opt);\r\n                if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(val))) {\r\n                    inText.setText(String.valueOf((int) val));\r\n                } else {\r\n                    inText.setText(String.valueOf(val));\r\n                }\r\n                opt = '^';\r\n                go = false;\r\n                addWrite = false;\r\n            } else {\r\n                opt = '^';\r\n            }\r\n        });\r\n        btnPower.setFont(new Font(\"Comic Sans MS\", Font.PLAIN, 24));\r\n        btnPower.setVisible(false);\r\n\r\n        // first incremental session: add log\r\n        btnLog = initBtn(\"ln\", x[4], y[3], event -> {\r\n            if (Pattern.matches(\"([-]?\\\\d+[.]\\\\d*)|(\\\\d+)\", inText.getText())) if (go) {\r\n                val = Math.log(Double.parseDouble(inText.getText()));\r\n                if (Pattern.matches(\"[-]?[\\\\d]+[.][0]*\", String.valueOf(val))) {\r\n                    inText.setText(String.valueOf((int) val));\r\n                } else {\r\n                    inText.setText(String.valueOf(val));\r\n                }\r\n                opt = 'l';\r\n                addWrite = false;\r\n            }\r\n        });\r\n        btnLog.setVisible(false);\r\n\r\n        window.setLayout(null);\r\n        window.setResizable(false);\r\n        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // Close button clicked? = End The process\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private JComboBox<String> initCombo(String[] items, int x, int y, String toolTip, Consumer consumerEvent) {\r\n        JComboBox<String> combo = new JComboBox<>(items);\r\n        combo.setBounds(x, y, 140, 25);\r\n        combo.setToolTipText(toolTip);\r\n        combo.setCursor(new Cursor(Cursor.HAND_CURSOR));\r\n        combo.addItemListener(consumerEvent::accept);\r\n        window.add(combo);\r\n\r\n        return combo;\r\n    }\r\n\r\n    private JButton initBtn(String label, int x, int y, ActionListener event) {\r\n        JButton btn = new JButton(label);\r\n        btn.setBounds(x, y, BUTTON_WIDTH, BUTTON_HEIGHT);\r\n        btn.setFont(new Font(\"Comic Sans MS\", Font.PLAIN, 28));\r\n        btn.setCursor(new Cursor(Cursor.HAND_CURSOR));\r\n        btn.addActionListener(event);\r\n        btn.setFocusable(false);\r\n        window.add(btn);\r\n\r\n        return btn;\r\n    }\r\n\r\n    public double calc(double x, String input, char opt) {\r\n        inText.setFont(inText.getFont().deriveFont(Font.PLAIN));\r\n        double y = Double.parseDouble(input);\r\n        switch (opt) {\r\n            case '+':\r\n                return x + y;\r\n            case '-':\r\n                return x - y;\r\n            case '*':\r\n                return x * y;\r\n            case '/':\r\n                return x / y;\r\n            case '%':\r\n                return x % y;\r\n            case '^':\r\n                return Math.pow(x, y);\r\n            default:\r\n                inText.setFont(inText.getFont().deriveFont(Font.PLAIN));\r\n                return y;\r\n        }\r\n    }\r\n\r\n    private void repaintFont() {\r\n        inText.setFont(inText.getFont().deriveFont(Font.PLAIN));\r\n    }\r\n\r\n    // first incremental session: add scientific mode\r\n    private Consumer<ItemEvent> calcTypeSwitchEventConsumer = event -> {\r\n        if (event.getStateChange() != ItemEvent.SELECTED) return;\r\n\r\n        String selectedItem = (String) event.getItem();\r\n        switch (selectedItem) {\r\n            case \"Standard\":\r\n                window.setSize(WINDOW_WIDTH, WINDOW_HEIGHT);\r\n                btnRoot.setVisible(false);\r\n                btnPower.setVisible(false);\r\n                btnLog.setVisible(false);\r\n                break;\r\n            case \"Scientific\":\r\n                window.setSize(WINDOW_WIDTH + 80, WINDOW_HEIGHT);\r\n                btnRoot.setVisible(true);\r\n                btnPower.setVisible(true);\r\n                btnLog.setVisible(true);\r\n                break;\r\n        }\r\n    };\r\n\r\n    // second incremental session: add different themes\r\n    private Consumer<ItemEvent> themeSwitchEventConsumer = event -> {\r\n        if (event.getStateChange() != ItemEvent.SELECTED) return;\r\n\r\n        String selectedTheme = (String) event.getItem();\r\n        switch (selectedTheme) {\r\n            case \"Simple\":\r\n                window.getContentPane().setBackground(null);\r\n                btnC.setBackground(null);\r\n                btnBack.setBackground(null);\r\n                btnMod.setBackground(null);\r\n                btnDiv.setBackground(null);\r\n                btnMul.setBackground(null);\r\n                btnSub.setBackground(null);\r\n                btnAdd.setBackground(null);\r\n                btnRoot.setBackground(null);\r\n                btnLog.setBackground(null);\r\n                btnPower.setBackground(null);\r\n                btnEqual.setBackground(null);\r\n                btn0.setBackground(null);\r\n                btn1.setBackground(null);\r\n                btn2.setBackground(null);\r\n                btn3.setBackground(null);\r\n                btn4.setBackground(null);\r\n                btn5.setBackground(null);\r\n                btn6.setBackground(null);\r\n                btn7.setBackground(null);\r\n                btn8.setBackground(null);\r\n                btn9.setBackground(null);\r\n                btnPoint.setBackground(null);\r\n\r\n                btnC.setForeground(Color.BLACK);\r\n                btnBack.setForeground(Color.BLACK);\r\n                btnMod.setForeground(Color.BLACK);\r\n                btnDiv.setForeground(Color.BLACK);\r\n                btnMul.setForeground(Color.BLACK);\r\n                btnSub.setForeground(Color.BLACK);\r\n                btnAdd.setForeground(Color.BLACK);\r\n                btnEqual.setForeground(Color.BLACK);\r\n                btnLog.setForeground(Color.BLACK);\r\n                btnPower.setForeground(Color.BLACK);\r\n                btnRoot.setForeground(Color.BLACK);\r\n                break;\r\n            case \"Colored\":\r\n                window.getContentPane().setBackground(null);\r\n                btnC.setBackground(Color.RED);\r\n                btnBack.setBackground(Color.ORANGE);\r\n                btnMod.setBackground(Color.GREEN);\r\n                btnDiv.setBackground(Color.PINK);\r\n                btnMul.setBackground(Color.PINK);\r\n                btnSub.setBackground(Color.PINK);\r\n                btnAdd.setBackground(Color.PINK);\r\n                btnRoot.setBackground(Color.PINK);\r\n                btnLog.setBackground(Color.PINK);\r\n                btnPower.setBackground(Color.PINK);\r\n                btnEqual.setBackground(Color.BLUE);\r\n                btn0.setBackground(Color.WHITE);\r\n                btn1.setBackground(Color.WHITE);\r\n                btn2.setBackground(Color.WHITE);\r\n                btn3.setBackground(Color.WHITE);\r\n                btn4.setBackground(Color.WHITE);\r\n                btn5.setBackground(Color.WHITE);\r\n                btn6.setBackground(Color.WHITE);\r\n                btn7.setBackground(Color.WHITE);\r\n                btn8.setBackground(Color.WHITE);\r\n                btn9.setBackground(Color.WHITE);\r\n                btnPoint.setBackground(Color.WHITE);\r\n\r\n                btnC.setForeground(Color.WHITE);\r\n                btnBack.setForeground(Color.WHITE);\r\n                btnMod.setForeground(Color.WHITE);\r\n                btnDiv.setForeground(Color.WHITE);\r\n                btnMul.setForeground(Color.WHITE);\r\n                btnSub.setForeground(Color.WHITE);\r\n                btnAdd.setForeground(Color.WHITE);\r\n                btnEqual.setForeground(Color.WHITE);\r\n                btnLog.setForeground(Color.WHITE);\r\n                btnPower.setForeground(Color.WHITE);\r\n                btnRoot.setForeground(Color.WHITE);\r\n                break;\r\n            case \"DarkTheme\":\r\n                final Color primaryDarkColor = new Color(141, 38, 99);\r\n                final Color secondaryDarkColor = new Color(171, 171, 171);\r\n\r\n                window.getContentPane().setBackground(new Color(68, 68, 68));\r\n                btn0.setBackground(secondaryDarkColor);\r\n                btn1.setBackground(secondaryDarkColor);\r\n                btn2.setBackground(secondaryDarkColor);\r\n                btn3.setBackground(secondaryDarkColor);\r\n                btn4.setBackground(secondaryDarkColor);\r\n                btn5.setBackground(secondaryDarkColor);\r\n                btn6.setBackground(secondaryDarkColor);\r\n                btn7.setBackground(secondaryDarkColor);\r\n                btn8.setBackground(secondaryDarkColor);\r\n                btn9.setBackground(secondaryDarkColor);\r\n                btnPoint.setBackground(secondaryDarkColor);\r\n\r\n                btnC.setForeground(secondaryDarkColor);\r\n                btnBack.setForeground(secondaryDarkColor);\r\n                btnMod.setForeground(secondaryDarkColor);\r\n                btnDiv.setForeground(secondaryDarkColor);\r\n                btnMul.setForeground(secondaryDarkColor);\r\n                btnSub.setForeground(secondaryDarkColor);\r\n                btnAdd.setForeground(secondaryDarkColor);\r\n                btnEqual.setForeground(secondaryDarkColor);\r\n                btnLog.setForeground(secondaryDarkColor);\r\n                btnPower.setForeground(secondaryDarkColor);\r\n                btnRoot.setForeground(secondaryDarkColor);\r\n                btnC.setBackground(primaryDarkColor);\r\n                btnBack.setBackground(primaryDarkColor);\r\n                btnMod.setBackground(primaryDarkColor);\r\n                btnDiv.setBackground(primaryDarkColor);\r\n                btnMul.setBackground(primaryDarkColor);\r\n                btnSub.setBackground(primaryDarkColor);\r\n                btnAdd.setBackground(primaryDarkColor);\r\n                btnRoot.setBackground(primaryDarkColor);\r\n                btnLog.setBackground(primaryDarkColor);\r\n                btnPower.setBackground(primaryDarkColor);\r\n                btnEqual.setBackground(primaryDarkColor);\r\n        }\r\n    };\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Calculator.java b/src/Calculator.java
--- a/src/Calculator.java	(revision 1194d4bf9cc31a7ee5266521585bd6f30eb00350)
+++ b/src/Calculator.java	(date 1665582381237)
@@ -51,7 +51,7 @@
         |   |           |   |
         |   +-----------+   |
         |                   |
-        |   0   1   1   3   |   y[1]
+        |   0   1   2   3   |   y[1]
         |   4   5   6   7   |   y[2]
         |   8   9   10  11  |   y[3]
         |   12  13  14  15  |   y[4]
Index: test/CalculatorTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import static org.junit.jupiter.api.Assertions.*;\r\n\r\nclass CalculatorTest {\r\n\r\n    private Calculator calculator;\r\n\r\n    @org.junit.jupiter.api.BeforeEach\r\n    void setUp() {\r\n        calculator = new Calculator();\r\n    }\r\n\r\n    @org.junit.jupiter.api.Test\r\n    void calc() {\r\n        double first = 3;\r\n        String second = \"5\";\r\n\r\n        try {\r\n            assertEquals(8, calculator.calc(first, second, '+'));\r\n            assertEquals(-2, calculator.calc(first, second, '-'));\r\n            assertEquals(15, calculator.calc(first, second, '*'));\r\n            assertEquals(0.6, calculator.calc(first, second, '/'));\r\n            assertEquals(3d, calculator.calc(first, second, '%'));\r\n            assertEquals(243, calculator.calc(first, second, '^'));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/CalculatorTest.java b/test/CalculatorTest.java
--- a/test/CalculatorTest.java	(revision 1194d4bf9cc31a7ee5266521585bd6f30eb00350)
+++ b/test/CalculatorTest.java	(date 1665578801532)
@@ -15,12 +15,20 @@
         String second = "5";
 
         try {
+            // 对基本运算的测试
             assertEquals(8, calculator.calc(first, second, '+'));
             assertEquals(-2, calculator.calc(first, second, '-'));
             assertEquals(15, calculator.calc(first, second, '*'));
             assertEquals(0.6, calculator.calc(first, second, '/'));
             assertEquals(3d, calculator.calc(first, second, '%'));
             assertEquals(243, calculator.calc(first, second, '^'));
+
+            // 对指对数与开平方运算的测试
+
+
+            //
+
+
         } catch (Exception e) {
             e.printStackTrace();
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"41bae216-c6b1-454b-89e8-67fba684233c\" name=\"Default Changelist\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/libraries/lib.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Calculator.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Calculator.iml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2FvqdQEdbWFV9WXmLfrEgVwHzIQ\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\r\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\r\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.23350254\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.31343284\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"Calculator\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CalculatorTest\" type=\"JUnit\" factoryName=\"JUnit\" nameIsGenerated=\"true\">\r\n      <module name=\"Calculator\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"18\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"CalculatorTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"41bae216-c6b1-454b-89e8-67fba684233c\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1665382995603</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1665382995603</updated>\r\n      <workItem from=\"1665382998546\" duration=\"924000\" />\r\n      <workItem from=\"1665383977713\" duration=\"413000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1194d4bf9cc31a7ee5266521585bd6f30eb00350)
+++ b/.idea/workspace.xml	(date 1665670223092)
@@ -2,11 +2,11 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="41bae216-c6b1-454b-89e8-67fba684233c" name="Default Changelist" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/libraries/lib.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Calculator.iml" beforeDir="false" afterPath="$PROJECT_DIR$/Calculator.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/test/Calculator/CalculatorTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/test/Calculator/CalculatorTest.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Calculator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Calculator.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/test/CalculatorTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/test/CalculatorTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -14,9 +14,10 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="Git.Settings">
-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
   </component>
   <component name="ProjectId" id="2FvqdQEdbWFV9WXmLfrEgVwHzIQ" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -45,6 +46,17 @@
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Main" />
       <module name="Calculator" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
+      <option name="arquillianRunConfiguration">
+        <value>
+          <option name="containerStateName" value="" />
+        </value>
+      </option>
+      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -77,10 +89,27 @@
       <updated>1665382995603</updated>
       <workItem from="1665382998546" duration="924000" />
       <workItem from="1665383977713" duration="413000" />
+      <workItem from="1665577859996" duration="268000" />
+      <workItem from="1665578480575" duration="1973000" />
+      <workItem from="1665582362461" duration="1254000" />
+      <workItem from="1665627796797" duration="112000" />
+      <workItem from="1665670177453" duration="46000" />
     </task>
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
 </project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 1194d4bf9cc31a7ee5266521585bd6f30eb00350)
+++ b/.idea/vcs.xml	(date 1665577863499)
@@ -2,5 +2,6 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="" vcs="Git" />
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
   </component>
 </project>
\ No newline at end of file
